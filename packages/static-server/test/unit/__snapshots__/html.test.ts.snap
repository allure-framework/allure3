// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`live > doesn't inject live reload script to html with attachment query parameter 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample page</title>
</head>
<body>
<h1>Hello world!</h1>
</body>
</html>"
`;

exports[`live > injects live reload script 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns index.html file by the full path 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns index.html when an url ends just with word without file extension 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns index.html when an url ends with /, when the file exists 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns nested/index.html file by the full path 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample nested page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns nested/index.html when an url ends just with word without file extension 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample nested page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns nested/index.html when an url ends with / 1`] = `
"<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Sample nested page</title>
</head>
<body>
<h1>Hello world!</h1>

    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
</html>"
`;

exports[`returns page with available files when an url ends with / and index.html doesn't exist 1`] = `
"
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <title>Allure Server</title>
        <meta charset="UTF-8" />
      </head>
      <body>
        <p>Allure Static Server</p>
        <ul>
          
          <li><a href="./bar/">bar/</a></li><li><a href="./baz/">baz/</a></li><li><a href="./foo/">foo/</a></li><li><a href="./foo.html">foo.html</a></li>
        </ul>
      
    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
    </html>
  "
`;

exports[`returns page with available files when an url ends with / asd 1`] = `
"
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <title>Allure Server</title>
        <meta charset="UTF-8" />
      </head>
      <body>
        <p>Allure Static Server</p>
        <ul>
          
          <li><a href="./foo/">foo/</a></li><li><a href="./foo.html">foo.html</a></li>
        </ul>
      
    <script>
      const eventSource = new EventSource("/__live_reload");
      
      eventSource.onmessage = () => {
        const newHash = Math.random().toString(36).slice(2, 10);
        
        window.localStorage.setItem("__allure_report_live_reload_hash__", newHash);
        window.location.reload();
      };
    </script>
  </body>
    </html>
  "
`;
